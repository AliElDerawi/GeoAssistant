plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.safe.args)
    alias(libs.plugins.gradle.plugin.secret)
    alias(libs.plugins.ksp)
    alias(libs.plugins.google.services)
}

android {
    namespace 'com.udacity.project4'
    compileSdk 35

    defaultConfig {
        applicationId "com.udacity.project4"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }

    buildFeatures {
        dataBinding true
        buildConfig true
    }

    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
            merges += "META-INF/LICENSE.md"
            merges += "META-INF/LICENSE-notice.md"
        }
    }

    secrets {
        // Optionally specify a different file name containing your secrets.
        // The plugin defaults to "local.properties"
        propertiesFileName = "secrets.properties"

        // A properties file containing default secret values. This file can be
        // checked in version control.
        defaultPropertiesFileName = "local.defaults.properties"

        // Configure which keys should be ignored by the plugin by providing regular expressions.
        // "sdk.dir" is ignored by default.
        ignoreList.add("sdk.*")       // Ignore all keys matching the regexp "sdk.*"
    }

    defaultConfig {
        // Read the MAPS_API_KEY from environment variables or provide a default value
        buildConfigField "String", "MAPS_API_KEY", "\"${System.getenv("MAPS_API_KEY") ?: "default_maps_api_key"}\""
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // App dependencies
    implementation libs.androidx.appcompat
    implementation libs.androidx.swiperefreshlayout
    implementation libs.material
    implementation libs.constraintLayout
    implementation libs.androidx.core.ktx

    // Architecture Components & Navigation dependencies
    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    implementation libs.androidx.espresso.idling.resource
    implementation libs.recyclerView
    implementation libs.recyclerViewSelection

    // Room dependencies
    implementation libs.androidx.room.runtime
    ksp libs.room.compiler
    // Kotlin Extensions and Coroutines support for Room
    implementation libs.androidx.room.ktx

    implementation libs.security.crypto.ktx

    // WorkManager
    implementation libs.andoidx.work

    // Koin
    implementation libs.koin.android
    implementation libs.koin.core

    implementation libs.koin.compat
    //  Jetpack WorkManager with Koin
    implementation libs.koin.workmanager
    // Navigation Graph with Koin
    implementation libs.koin.navigation

    // Maps & Geofencing
    implementation libs.play.services.location
    implementation libs.play.services.maps

    // Firebase
    implementation libs.firebase.ui.auth
    implementation libs.firebase.auth.ktx
    implementation libs.play.services.auth

    implementation libs.timber
    implementation libs.multidex

    implementation libs.glide
    ksp libs.glide.compiler

    // Dependencies for local unit tests
    testImplementation libs.junit
    testImplementation libs.androidx.core.testing
    testImplementation libs.kotlinx.coroutines.android
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.robolectric
    testImplementation libs.truth
    testImplementation libs.mockito.core

    testImplementation libs.koin.test
    // Koin for JUnit 4
    testImplementation libs.koin.test.junit4
    // Koin for JUnit 5
    testImplementation libs.koin.test.junit5
    testImplementation libs.koin.android.test


    androidTestImplementation libs.koin.test
    // Koin for JUnit 4
    androidTestImplementation libs.koin.test.junit4
    // Koin for JUnit 5
    androidTestImplementation libs.koin.test.junit5
    androidTestImplementation libs.koin.android.test


    // AndroidX Test - JVM testing
    testImplementation libs.core.ktx
    testImplementation libs.androidx.junit.ktx
    testImplementation libs.androidx.rules

    // AndroidX Test - Instrumented testing
    androidTestImplementation libs.core.ktx
    androidTestImplementation libs.androidx.junit.ktx
    androidTestImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.androidx.rules
    androidTestImplementation libs.androidx.room.testing
    androidTestImplementation libs.androidx.core.testing
    androidTestImplementation libs.annotations
    androidTestImplementation libs.androidx.espresso.core
    // Testing code for more advanced views such as the DatePicker and RecyclerView.
    // It also contains accessibility checks and a class called CountingIdlingResource.
    androidTestImplementation libs.androidx.espresso.contrib
    androidTestImplementation libs.androidx.espresso.intents
    androidTestImplementation libs.androidx.idling.concurrent
    androidTestImplementation libs.junit
    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.
    debugImplementation libs.androidx.fragment.testing
    implementation libs.androidx.core
    androidTestImplementation libs.mockito.core
    androidTestImplementation libs.dexmaker.mockito
    androidTestImplementation libs.koin.android.test
    androidTestImplementation libs.koin.test.junit4
    // Koin for JUnit 5
    androidTestImplementation libs.koin.test.junit5

}